<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="test_failure_output" errors="1" failures="28" tests="29" time="0.452" hostname="unknown" timestamp="2015-06-05T22:58:25">
  <properties/>
  <testcase classname="test_failure_output" name="test_empty">
    <failure><![CDATA[Expected empty expression was actually: 3.
In test_failure_output.m at line 12]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_not_empty">
    <failure><![CDATA[Expected non-empty expression was actually empty.
In test_failure_output.m at line 17]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_false">
    <failure><![CDATA[Expected false was actually true.
In test_failure_output.m at line 22]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_true">
    <failure><![CDATA[Expected true was actually false.
In test_failure_output.m at line 27]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_fail">
    <failure><![CDATA[This some custom fail message
In test_failure_output.m at line 31]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals">
    <failure><![CDATA[Data not equal:
  Expected : 3
  Actual   : 4
In test_failure_output.m at line 36]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_array">
    <failure><![CDATA[Data not equal:
  Expected : [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16]
  Actual   : [1 2 3 4 5 6 7 8 9 10.000001 11 12 13 14 15]
In test_failure_output.m at line 42]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_arraymatrix">
    <failure><![CDATA[Data not equal:
  Expected : [1 2 3 4;5 6 7 8;9 10 11 12;13 14 15 16]
  Actual   : [1 2 3 4;5 6 7 8;9 10.000001 11 12;13 14 15 16]
In test_failure_output.m at line 50]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_string">
    <failure><![CDATA[Data not equal:
  Expected : 'foo'
  Actual   : 'fOO'
  Changes  :   ^^
In test_failure_output.m at line 55]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_scalar_cellstring">
    <failure><![CDATA[Data not equal:
  Expected : {'foo'}
  Actual   : {'fOO'}
  Changes  :    ^^
In test_failure_output.m at line 60]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_cell">
    <failure><![CDATA[Data not equal:
  Expected : {3, 'foo'}
  Actual   : {3, 'fOo'}
In test_failure_output.m at line 67]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_struct">
    <failure><![CDATA[Data not equal at position .foo:
  Expected : {'hi', 'ho'}
  Actual   : {'ho', 'hi'}
In test_failure_output.m at line 75]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_string_struct">
    <failure><![CDATA[Data not equal at position .foo:
  Expected : 'you say \to-'mah-(,)to'
  Actual   : 'you say \to-'mey-(,)to'
  Changes  :                ^^
In test_failure_output.m at line 85]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_scalar_cellstring_struct">
    <failure><![CDATA[Data not equal at position .foo:
  Expected : {'you say \to-'mah-(,)to'}
  Actual   : {'you say \to-'mey-(,)to'}
  Changes  :                 ^^
In test_failure_output.m at line 95]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_nested_struct">
    <failure><![CDATA[Data not equal at position .tee.foo:
  Expected : {'hi', 'ho'}
  Actual   : {'ho', 'hi'}
In test_failure_output.m at line 104]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_nested_struct_multiple_differences">
    <failure><![CDATA[Data not equal at position .tee.bar:
  Expected : [3 4]
  Actual   : [3 5]
Data not equal at position .tee.foo:
  Expected : {'hi', 'ho'}
  Actual   : {'ho', 'hi'}
In test_failure_output.m at line 114]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_nested_struct_many_differences">
    <failure><![CDATA[Data not equal at position .bar:
  Expected : [3 4]
  Actual   : [3 5]
Data not equal at position .foo:
  Expected : {'hi', 'ho'}
  Actual   : 42
Data not equal at position .tee.bar:
  Expected : [3 4]
  Actual   : [3 5]
... more differences detected, but not displayed.
In test_failure_output.m at line 126]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_structarray">
    <failure><![CDATA[Data not equal:
  Expected : [{foo:{'hi', 'ho'}; bar:3}, {foo:{'hi', 'ho'}; bar:4}]
  Actual   : [{foo:{'hi', 'ho'}; bar:3}, {foo:{'ho', 'hi'}; bar:4}]
In test_failure_output.m at line 134]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_object">
    <failure><![CDATA[Data not equal:
  Expected : Time Series Object: unnamed

Time vector characteristics

      Length                12
      Start time            0 seconds
      End time              11 seconds

Data characteristics

      Interpolation method  linear
      Size                  [1   1  12]
      Data type             double
  Actual   : Time Series Object: unnamed

Time vector characteristics

      Length                12
      Start time            0 seconds
      End time              11 seconds

Data characteristics

      Interpolation method  linear
      Size                  [1   1  12]
      Data type             double
In test_failure_output.m at line 144]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_handle">
    <failure><![CDATA[Data not equal:
  Expected : 0
  Actual   : 1
In test_failure_output.m at line 159]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_functionhandle">
    <failure><![CDATA[Data not equal:
  Expected : @(x)x*x+x
  Actual   : @(x)x+x*x
In test_failure_output.m at line 175]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_equals_javaobject">
    <failure><![CDATA[Data not equal:
  Expected : hiho
  Actual   : hiHo
In test_failure_output.m at line 181]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_not_equals">
    <failure><![CDATA[Expected and actual are equal.
In test_failure_output.m at line 186]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_error">
    <failure><![CDATA[Should be error, but 3 alone isn't.
Error expected, but none occurred.
In test_failure_output.m at line 191]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_typed_error">
    <failure><![CDATA[Error expected, but none occurred.
In test_failure_output.m at line 196]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_wrong_typed_error">
    <failure><![CDATA[Error occurred, but did not match criteria. Expected error identifier 'MATLAB:SomeError' actually was 'MATLAB:m_improper_grouping'.
In test_failure_output.m at line 200]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_warning">
    <failure><![CDATA[No warning MATLAB:rmpath:DirNotFound when executing function @()3.
In test_failure_output.m at line 206]]></failure>
  </testcase>
  <testcase classname="test_failure_output" name="test_implementation_fault">
    <error><![CDATA[Undefined function or variable 'unknown_function_call'.
In test_failure_output.m at line 210
In run_test.m at line 21
In run_test.m at line 50
In run_suite.m at line 86
In run_suite_collection.m at line 126
In run_suite_collection.m at line 45
In recursive_test_run.m at line 27]]></error>
  </testcase>
  <testcase classname="test_failure_output" name="test_nested_functions">
    <failure><![CDATA[Nested function test.
In test_failure_output.m at line 218
In test_failure_output.m at line 214]]></failure>
  </testcase>
  <system-out/>
  <system-err/>
</testsuite>
