=====================================
   m l U n i t   C H A N G E L O G
=====================================


mlUnit development snapshot
---------------------------

  - mlUnit parameter changes in test of fixture functions will be reverted
    after each test's tear_down execution
  - Expanded mlunit_param to get and set the whole parameter configuration.
  - recursive_test_run restores path, pwd and mlunit_param to pre-run state
    after execution
  - major backend refactoring for easier maintenance, including:
      + @test_case restricted to being a base class template for test classes,
        separating actual test execution into mlunit_suite_runner for now
      + @test_suite renamed into @mtest_testsuite, also restricted to being
        a simple, one-level list of test cases; dropped support for manually
        constructing multi-level test suites
      + @test_result deleted, in favor of simple struct array, and in an effort
        to separate the actual results from how they are displayed
      + @mlunit_progress_listener added, as yet-to-be-implemented mechanism
        for the gui to listen on test case execution states
      + @mlunit_suite_runner added, as reusable mechanism for execution
        one test suite
      + gui and gui test cases broken for now

  - Fix: assert() calls break R2006b compatibility.
  - Fix: mat2str displays strings differently on R2006b and probably before.
  - Fix: function stringification contains whitespace on R2006b, but not later.
  - Fix: errors in a set_up fixture prevent execution of the tear_down
    fixture and mlunit_param reversion
  - Fix: Invalid jUnit XML from hapless MATLAB error message [B#20]
  - Fix: jUnit XML indentation sometimes applied to mid-line tags

  [B#20] https://sourceforge.net/p/mlunit/bugs/20/


mlUnit 1.6.7 (2015-01-08)
-------------------------

  - Added assert_matfile_equals: Raise an error if two mat Files differ. [F#12]
  - Added support for partial stack comparison in assert_error.
  - Test suite functions may declare their host function on the first or
    succeeding lines.
  - assert_equals failure prints differences on top of each other, instead of
    next to teach other for improved readability
  - Improved recursive_test_run's output for readability. Which functions failed
    should now be easily discernible. Of course, random warnings and disps still
    clutter the output. [F#14]
  - Failures now only print a part of the stack trace and hides the higher
    calling chain.
  - assert_* functions provide default failure message if none given
  - Failures now recognized by typed error. Still needs magic string for masking
    the actual error message.
  - Sample directory for assert failure outputs.
  - Enable (admittedly hacked) unit testing for private functions.
  - assert_equals now only displays differences when comparing structs,
    instead of slapping a wall of text in your face

  - Fix: build.xml did not execute mlUnit tests; report directory was not being
    created; MATLAB automation options conflicted; MATLAB property check failed.
  - Fix: Error prelude not filtered for newer MATLABs (around R2011b)
  - Fix: Test suite functions whose host function is not declared on the very
    first line lead to an unintelligible error.
  - Fix: some numeric arrays deemed equal, even if of different size
  - Fix: assert_not_equals failure message suggests having used assert_equals.
  - Fix: printable returns logical for 1x0 char strings
  - Fix: empty 1x0 and 0x0 char strings deemed different
  - Fix: assert_error executes functions given as string in its own workspace

  [F#12] http://sourceforge.net/p/mlunit/feature-requests/12/
  [F#14] http://sourceforge.net/p/mlunit/feature-requests/14/


mlUnit 1.6.6 (2013-12-13)
-------------------------

  - assert_error may take a function handle or an eval string for execution
  - assert_error can check for the error identifier or even the stack
  - Changed assert_warning's argument order, to be consistent with assert_error
    order.
  - Let recursive_test_run print test result overview. [F#14]

  - Fix: wrong assert_* usage yields a failure, but should yield an error
  - Fix: calling assert_warning without arguments is confusing
  - Fix: test_add_error_with_stack depends on specific line numbers and
    frequently fails without reason.
  - Fix: recursive_test_run omits class-based test implementations. [B#16]
    Added dirset function from Zyndric's pathtools.

  [F#14] https://sourceforge.net/p/mlunit/feature-requests/14/
  [B#16] https://sourceforge.net/p/mlunit/bugs/16/


mlUnit 1.6.5 (2013-11-19)
-------------------------

  - Refactored implementation of assert_(not_)equals(_withequalnans).
  - Absolute tolerance for equalling distinct differences now in place for all
    assert_(not_)equals(_withequalnans) functions.
  - Equality tolerance can be checked with NaN value matrices as well.
  - NaN equality is now an mlUnit parameter named equal_nans, eliminating
    functions named assert_(not_)equals_withequalnans. [F#13]

  - Fix: eps comparison for vectors yields undetermined results
  - Fix: eps comparison fails for vectors of incompatible types, e.g. double and
    uint8. Changed assert_equals to compare eps only for equal numeric types.
  - Fix: Rerunning a testcase from the mlUnit GUI does not update the test's
    implementation. [B#22]
  - Fix: assert_error fails on R2007b and later. [B#21]
  - Fix: normal assertion strings get sprintf evaluated.

  [F#13] https://sourceforge.net/p/mlunit/feature-requests/13/
  [B#21] https://sourceforge.net/p/mlunit/bugs/21/
  [B#22] https://sourceforge.net/p/mlunit/bugs/22/


mlUnit 1.6.4 (2013-05-27)
-------------------------

  - Removed install.m script. Content not needed, since assert can not get
    shadowed anymore.
  - assert_true and assert_false may be called without arguments, in which case
    they pass or fail respectively.
  - assert_equals and assert_equals_withequalnans can receive an absolute
    tolerance to handle slight differences equally.
  - assert_warning checks for a specific warning when executing a function.
  - Updated m2html documentation.

  - Fix: license strings
  - Fix: stack trace filter for assert functions did not include newer
    assert wrappers
  - Fix: Failed on missing subclass argument.
  - Fix: gui_test_runner failed on a callback invocation with empty handles for
    MATLAB R2008b. Reported as [B#15].
  - Fix: MATLAB shadow warning on assert function. Reported as [B#17].
    Testcases must be migrated to use assert_true instead.

    [B#15] https://sourceforge.net/p/mlunit/bugs/15/
    [B#17] https://sourceforge.net/p/mlunit/bugs/17/


mlUnit 1.6.3 (2012-07-13)
-------------------------

  - Provide assert_equals methods that equal NaN values. #2873.
  - Fix: Do not indent raw text in XML generation. #2874.


mlUnit 1.6.2 (2012-07-12)
-------------------------

  - Refactored XML generation.
  - Fix: XML head tag.


mlUnit 1.6.1 (2012-06-18)
-------------------------

  - Support for shallow and recursive path dependencies in Ant mlUnit task.
  - Support for executing additional MATLAB commands from Ant mlUnit task.
  - Fix: Empty relative directory yielded ugly dot.
  - Fix: Empty default shallow directory property.


mlUnit 1.6 (2012-06-13)
-----------------------

  - Added Ant build script. Lets other Ant scripts trigger recursive execution
    of all test scripts they like to execute.
  - Added assert_error.
  - Added generation of jUnit compatible XML output
  - Added recursive execution of all test script files in a specific folder and
    all its subfolders
  - Expanded mlUnit core test_case to return its function_name.


mlUnit 1.5.2 (2012-06-06)
-------------------------

  - Added assert_empty, assert_not_empty.
  - Fix: assert_equals, assert_not_equals failed when building strings from cell
    or structure arrays.
  - Simplified assert accessor functions. Made them consistent.

